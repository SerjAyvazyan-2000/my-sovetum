/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 */

import React, { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { useLaunchParams, backButton } from '@telegram-apps/sdk-react'
import Loading from '../components/common/Loading'

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
interface User {
  id?: number
  first_name?: string
  last_name?: string
  username?: string
  language_code?: string
  is_premium?: boolean
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
interface UserStats {
  total_sessions: number
  total_messages: number
  favorite_expert?: string
  last_session?: Date
}

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
const ProfilePage: React.FC = () => {
  const navigate = useNavigate()
  const launchParams = useLaunchParams()
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [user, setUser] = useState<User | null>(null)
  const [stats, setStats] = useState<UserStats | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  
  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
   */
  const loadUserData = async () => {
    try {
      setLoading(true)
      setError(null)
      
      console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
      let telegramUser: User | null = null
      
      if (launchParams?.initData?.user) {
        telegramUser = {
          id: launchParams.initData.user.id,
          first_name: launchParams.initData.user.firstName,
          last_name: launchParams.initData.user.lastName,
          username: launchParams.initData.user.username,
          language_code: launchParams.initData.user.languageCode,
          is_premium: launchParams.initData.user.isPremium
        }
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Telegram:', telegramUser)
      } else {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        telegramUser = {
          id: 12345,
          first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
          last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          username: 'testuser',
          language_code: 'ru',
          is_premium: false
        }
        console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      }
      
      setUser(telegramUser)
      
      // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - API –≤—ã–∑–æ–≤)
      await new Promise(resolve => setTimeout(resolve, 1000))
      
      const mockStats: UserStats = {
        total_sessions: 12,
        total_messages: 45,
        favorite_expert: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ë–∏–∑–Ω–µ—Å–æ–≤',
        last_session: new Date(Date.now() - 2 * 60 * 60 * 1000) // 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
      }
      
      setStats(mockStats)
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞')
      
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', err)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è')
    } finally {
      setLoading(false)
    }
  }
  
  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
   */
  const goBack = () => {
    console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É')
    navigate('/')
  }
  
  /**
   * –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—ã—Ö–æ–¥)
   */
  const handleLogout = () => {
    console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è –≤—ã—Ö–æ–¥–∞
    // window.Telegram?.WebApp?.close()
    alert('–§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ')
  }
  
  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏
   */
  const formatLastSession = (date: Date) => {
    const now = new Date()
    const diffMs = now.getTime() - date.getTime()
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60))
    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24))
    
    if (diffDays > 0) {
      return `${diffDays} ${diffDays === 1 ? '–¥–µ–Ω—å' : '–¥–Ω—è'} –Ω–∞–∑–∞–¥`
    } else if (diffHours > 0) {
      return `${diffHours} ${diffHours === 1 ? '—á–∞—Å' : '—á–∞—Å–∞'} –Ω–∞–∑–∞–¥`
    } else {
      return '—Ç–æ–ª—å–∫–æ —á—Ç–æ'
    }
  }
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    loadUserData()
  }, [])
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
  useEffect(() => {
    if (backButton.show.isAvailable()) {
      backButton.show()
      backButton.onClick(goBack)
    }
    
    return () => {
      if (backButton.hide.isAvailable()) {
        backButton.hide()
      }
      if (backButton.offClick) {
        backButton.offClick(goBack)
      }
    }
  }, [])
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <Loading text="–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è..." />
      </div>
    )
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
  if (error) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen telegram-spacing text-center">
        <div className="text-4xl mb-4">üòî</div>
        <h2 className="text-lg font-bold mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
        <p className="text-sm tg-hint mb-4">{error}</p>
        <button 
          onClick={loadUserData}
          className="tg-button"
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    )
  }
  
  return (
    <div className="animate-fade-in">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center mb-6">
        <button
          onClick={goBack}
          className="mr-3 text-lg"
          style={{ color: 'var(--tg-theme-link-color, #2481cc)' }}
        >
          ‚Üê
        </button>
        <h1 
          className="text-xl font-bold"
          style={{ color: 'var(--tg-theme-text-color, #000000)' }}
        >
          –ü—Ä–æ—Ñ–∏–ª—å
        </h1>
      </div>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
      {user && (
        <div className="card mb-6">
          <div className="flex items-center space-x-4 mb-4">
            {/* –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
            <div 
              className="
                w-16 
                h-16 
                rounded-full 
                flex 
                items-center 
                justify-center 
                text-2xl
                font-bold
              "
              style={{
                backgroundColor: 'var(--tg-theme-button-color, #2481cc)',
                color: '#ffffff'
              }}
            >
              {user.first_name.charAt(0).toUpperCase()}
              {user.last_name?.charAt(0).toUpperCase() || ''}
            </div>
            
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="flex-1">
              <h2 
                className="text-lg font-bold"
                style={{ color: 'var(--tg-theme-text-color, #000000)' }}
              >
                {user.first_name} {user.last_name || ''}
              </h2>
              
              {user.username && (
                <p 
                  className="text-sm"
                  style={{ color: 'var(--tg-theme-link-color, #2481cc)' }}
                >
                  @{user.username}
                </p>
              )}
              
              <div className="flex items-center space-x-2 mt-2">
                <span 
                  className="text-xs"
                  style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
                >
                  ID: {user.id}
                </span>
                
                {user.is_premium && (
                  <span className="px-2 py-1 text-xs rounded-full bg-yellow-100 text-yellow-800 font-medium">
                    Premium
                  </span>
                )}
              </div>
            </div>
          </div>
          
          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="space-y-2 text-sm">
            <div className="flex justify-between">
              <span style={{ color: 'var(--tg-theme-hint-color, #999999)' }}>
                –Ø–∑—ã–∫:
              </span>
              <span style={{ color: 'var(--tg-theme-text-color, #000000)' }}>
                {user.language_code?.toUpperCase() || 'RU'}
              </span>
            </div>
          </div>
        </div>
      )}
      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
      {stats && (
        <div className="card mb-6">
          <h3 
            className="text-lg font-semibold mb-4"
            style={{ color: 'var(--tg-theme-text-color, #000000)' }}
          >
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          </h3>
          
          <div className="grid grid-cols-2 gap-4 mb-4">
            <div className="text-center">
              <div 
                className="text-2xl font-bold"
                style={{ color: 'var(--tg-theme-button-color, #2481cc)' }}
              >
                {stats.total_sessions}
              </div>
              <div 
                className="text-xs"
                style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
              >
                –°–µ—Å—Å–∏–π
              </div>
            </div>
            
            <div className="text-center">
              <div 
                className="text-2xl font-bold"
                style={{ color: 'var(--tg-theme-button-color, #2481cc)' }}
              >
                {stats.total_messages}
              </div>
              <div 
                className="text-xs"
                style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
              >
                –°–æ–æ–±—â–µ–Ω–∏–π
              </div>
            </div>
          </div>
          
          {stats.favorite_expert && (
            <div className="text-sm space-y-1">
              <div className="flex justify-between">
                <span style={{ color: 'var(--tg-theme-hint-color, #999999)' }}>
                  –õ—é–±–∏–º—ã–π —ç–∫—Å–ø–µ—Ä—Ç:
                </span>
                <span style={{ color: 'var(--tg-theme-text-color, #000000)' }}>
                  {stats.favorite_expert}
                </span>
              </div>
            </div>
          )}
          
          {stats.last_session && (
            <div className="text-sm mt-2">
              <div className="flex justify-between">
                <span style={{ color: 'var(--tg-theme-hint-color, #999999)' }}>
                  –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:
                </span>
                <span style={{ color: 'var(--tg-theme-text-color, #000000)' }}>
                  {formatLastSession(stats.last_session)}
                </span>
              </div>
            </div>
          )}
        </div>
      )}
      
      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="card">
        <h3 
          className="text-lg font-semibold mb-4"
          style={{ color: 'var(--tg-theme-text-color, #000000)' }}
        >
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        </h3>
        
        <div className="space-y-3">
          <button
            onClick={() => navigate('/')}
            className="
              w-full 
              text-left 
              p-3 
              rounded-lg 
              border 
              text-sm
              hover:bg-gray-50
            "
            style={{
              borderColor: 'var(--tg-theme-hint-color, #999999)',
              color: 'var(--tg-theme-text-color, #000000)'
            }}
          >
            üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
          </button>
          
          <button
            onClick={handleLogout}
            className="
              w-full 
              text-left 
              p-3 
              rounded-lg 
              border 
              text-sm
              hover:bg-red-50
            "
            style={{
              borderColor: 'var(--tg-theme-destructive-text-color, #ff6b6b)',
              color: 'var(--tg-theme-destructive-text-color, #ff6b6b)'
            }}
          >
            üö™ –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          </button>
        </div>
      </div>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ */}
      <div className="mt-6 text-center">
        <p 
          className="text-xs"
          style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
        >
          –°–æ–≤–µ—Ç –≠–∫—Å–ø–µ—Ä—Ç–æ–≤ v1.0
        </p>
        <p 
          className="text-xs mt-1"
          style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
        >
          Telegram Mini App
        </p>
      </div>
      
      {/* Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ dev —Ä–µ–∂–∏–º–µ */}
      {import.meta.env.DEV && launchParams && (
        <div className="mt-6 p-3 rounded text-xs border-t">
          <details>
            <summary 
              className="cursor-pointer font-medium"
              style={{ color: 'var(--tg-theme-link-color, #2481cc)' }}
            >
              Debug: LaunchParams
            </summary>
            <pre 
              className="mt-2 text-xs overflow-auto max-h-40"
              style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
            >
              {JSON.stringify(launchParams, null, 2)}
            </pre>
          </details>
        </div>
      )}
    </div>
  )
}

export default ProfilePage 
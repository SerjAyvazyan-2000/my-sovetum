/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —á–∞—Ç–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —ç–∫—Å–ø–µ—Ä—Ç–æ–º
 * –†–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Telegram Web App
 */

import React, { useState, useEffect, useRef } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import { backButton, mainButton, useSignal } from '@telegram-apps/sdk-react'
import Loading from '../components/common/Loading'
import { expertService, type Expert, type SendMessageRequest } from '../services/expertService'

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ UI
 */
interface DisplayMessage {
  id: number
  text: string
  sender: 'user' | 'expert'
  timestamp: Date
  isLoading?: boolean
  metadata?: any
}

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —á–∞—Ç–∞ —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—é—é –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å AI —ç–∫—Å–ø–µ—Ä—Ç–æ–º
 */
const ChatPage: React.FC = () => {
  const { expertId } = useParams<{ expertId: string }>()
  const navigate = useNavigate()
  
  // –†–µ—Ñ –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const inputRef = useRef<HTMLInputElement>(null)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [expert, setExpert] = useState<Expert | null>(null)
  const [messages, setMessages] = useState<DisplayMessage[]>([])
  const [inputValue, setInputValue] = useState('')
  const [loading, setLoading] = useState(true)
  const [sending, setSending] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [sessionId, setSessionId] = useState<number | null>(null)
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ Telegram

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä—Ç–∞ –ø–æ ID –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–µ—Å—Å–∏—é
   * –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ -> localStorage -> –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è
   */
  const loadExpert = async () => {
    if (!expertId) return
    
    setLoading(true)
    setError('')
    
    try {
      const expertData = await expertService.getExpertById(Number(expertId))
      
      if (!expertData) {
        throw new Error('–≠–∫—Å–ø–µ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }
      
      if (!expertData.is_available) {
        throw new Error('–≠–∫—Å–ø–µ—Ä—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
      }
      
      setExpert(expertData)
      
      // üöÄ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —ç–∫—Å–ø–µ—Ä—Ç–∞:', expertData.name)
      const restorationResult = await expertService.autoRestoreContext(expertData.id)
      
      if (restorationResult.restored && restorationResult.sessionId && restorationResult.messages) {
        console.log(`‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–µ—Ç–æ–¥–æ–º: ${restorationResult.method}`)
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
        setSessionId(restorationResult.sessionId)
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const displayMessages: DisplayMessage[] = restorationResult.messages.map(msg => ({
          id: msg.id,
          text: msg.content,
          sender: msg.message_type === 'user' ? 'user' : 'expert',
          timestamp: new Date(msg.created_at),
          metadata: msg.metadata
        }))
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç–æ–¥–∞
        let resumeMessageText = ''
        let resumeMessageType = ''
        
        if (restorationResult.method === 'server') {
          resumeMessageText = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å.`
          resumeMessageType = 'server_restore'
          
          // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
          if (restorationResult.context?.context_summary) {
            resumeMessageText += ` \n\nüìù –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: ${restorationResult.context.context_summary}`
          }
          
          if (restorationResult.context?.total_messages) {
            resumeMessageText += `\nüí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏: ${restorationResult.context.total_messages}`
          }
        } else if (restorationResult.method === 'local') {
          resumeMessageText = `–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –Ω–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞...`
          resumeMessageType = 'local_restore'
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
        const resumeMessage: DisplayMessage = {
          id: Date.now(),
          text: resumeMessageText,
          sender: 'expert',
          timestamp: new Date(),
          metadata: { 
            is_system_message: true, 
            restoration_method: restorationResult.method,
            restoration_type: resumeMessageType
          }
        }
        
        setMessages([resumeMessage, ...displayMessages])
        console.log(`üîÑ –°–µ—Å—Å–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${displayMessages.length} –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ`)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞
        try {
          const recommendations = await expertService.getExpertRecommendations(expertData.id)
          if (recommendations.length > 0) {
            console.log(`üí° –ü–æ–ª—É—á–µ–Ω–æ ${recommendations.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞`)
            
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö
            const recommendationMessage: DisplayMessage = {
              id: Date.now() + 1,
              text: `üí° –£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—é –Ω–∞—à–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞. –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ?`,
              sender: 'expert',
              timestamp: new Date(),
              metadata: { 
                is_recommendation_prompt: true,
                recommendations: recommendations
              }
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
            setTimeout(() => {
              setMessages(prev => [...prev, recommendationMessage])
            }, 2000)
          }
        } catch (recError) {
          console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:', recError)
        }
        
        return // –í—ã—Ö–æ–¥–∏–º, –∫–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      }
      
      // üÜï –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ô –°–ï–°–°–ò–ò
      console.log('üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º:', expertData.name)
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
      const welcomeMessage: DisplayMessage = {
        id: Date.now(),
        text: `–ü—Ä–∏–≤–µ—Ç! –Ø ${expertData.name} - ${expertData.role}. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`,
        sender: 'expert',
        timestamp: new Date(),
        metadata: { 
          is_welcome_message: true,
          expert_id: expertData.id
        }
      }
      
      setMessages([welcomeMessage])
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º:', expertData.name)
      
    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞:', err)
      setError(err.message || '–≠–∫—Å–ø–µ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      
      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
      const fallbackExperts: Record<string, Expert> = {
        '1': {
          id: 1,
          name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ë–∏–∑–Ω–µ—Å–æ–≤',
          role: '–ë–∏–∑–Ω–µ—Å-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
          description: '–ë–∏–∑–Ω–µ—Å-—ç–∫—Å–ø–µ—Ä—Ç',
          expertise_areas: ['business'],
          total_conversations: 0,
          total_messages: 0,
          average_rating: 0,
          required_subscription: 'free',
          is_available: true
        },
        '2': {
          id: 2,
          name: '–ï–ª–µ–Ω–∞ –ü—Å–∏—Ö–æ–ª–æ–≥–æ–≤–∞',
          role: '–ü—Å–∏—Ö–æ–ª–æ–≥-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
          description: '–ü—Å–∏—Ö–æ–ª–æ–≥-—ç–∫—Å–ø–µ—Ä—Ç',
          expertise_areas: ['psychology'],
          total_conversations: 0,
          total_messages: 0,
          average_rating: 0,
          required_subscription: 'free',
          is_available: true
        },
        '3': {
          id: 3,
          name: '–î–º–∏—Ç—Ä–∏–π –§–∏–Ω–∞–Ω—Å–æ–≤',
          role: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫',
          description: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —ç–∫—Å–ø–µ—Ä—Ç',
          expertise_areas: ['finance'],
          total_conversations: 0,
          total_messages: 0,
          average_rating: 0,
          required_subscription: 'pro',
          is_available: true
        },
        '4': {
          id: 4,
          name: '–ê–Ω–Ω–∞ –ö–∞—Ä—å–µ—Ä–æ–≤–∞',
          role: '–ö–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ—É—á',
          description: '–ö–∞—Ä—å–µ—Ä–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç',
          expertise_areas: ['career'],
          total_conversations: 0,
          total_messages: 0,
          average_rating: 0,
          required_subscription: 'free',
          is_available: true
        },
        '5': {
          id: 5,
          name: '–ú–∞–∫—Å–∏–º –¢–µ—Ö–Ω–∏–∫–æ–≤',
          role: 'IT-—ç–∫—Å–ø–µ—Ä—Ç',
          description: 'IT-—ç–∫—Å–ø–µ—Ä—Ç',
          expertise_areas: ['technology'],
          total_conversations: 0,
          total_messages: 0,
          average_rating: 0,
          required_subscription: 'pro',
          is_available: true
        }
      }
      
      const foundExpert = fallbackExperts[expertId!]
      if (foundExpert) {
        setExpert(foundExpert)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –∏ –¥–ª—è fallback —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
        const savedSessionId = expertService.getExpertSessionId(foundExpert.id)
        if (savedSessionId) {
          console.log(`üîÑ –ù–∞–π–¥–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è ${savedSessionId} –¥–ª—è fallback —ç–∫—Å–ø–µ—Ä—Ç–∞ ${foundExpert.name}`)
          setSessionId(savedSessionId)
        }
        
        const welcomeMessage: DisplayMessage = {
          id: Date.now(),
          text: `–ü—Ä–∏–≤–µ—Ç! –Ø ${foundExpert.name} - ${foundExpert.role}. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`,
          sender: 'expert',
          timestamp: new Date(),
          metadata: { is_fallback_mode: true }
        }
        setMessages([welcomeMessage])
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã fallback –¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä—Ç–∞')
      }
      
    } finally {
      setLoading(false)
    }
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç—É
   */
  const sendMessage = async () => {
    if (!inputValue.trim() || sending || !expert) return
    
    const messageText = inputValue.trim()
    setInputValue('')
    setSending(true)
    
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userMessage: DisplayMessage = {
        id: Date.now(),
        text: messageText,
        sender: 'user',
        timestamp: new Date()
      }
      
      setMessages(prev => [...prev, userMessage])
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞
      const typingMessage: DisplayMessage = {
        id: Date.now() + 1,
        text: '–ü–µ—á–∞—Ç–∞–µ—Ç...',
        sender: 'expert',
        timestamp: new Date(),
        isLoading: true
      }
      
      setMessages(prev => [...prev, typingMessage])
      
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç—É —á–µ—Ä–µ–∑ API:', messageText)
      
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è API
      const sendRequest: SendMessageRequest = {
        expert_id: expert.id,
        message: messageText,
        ...(sessionId && { session_id: sessionId })
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ä–µ–∞–ª—å–Ω—ã–π API
      const response = await expertService.sendMessage(sendRequest)
      
      if (response.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º session_id –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (!sessionId) {
          setSessionId(response.session_id)
        }
        
        // –ó–∞–º–µ–Ω—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        setMessages(prev => prev.map(msg => 
          msg.isLoading && msg.sender === 'expert' 
            ? {
                id: response.expert_response.id,
                text: response.expert_response.content,
                sender: 'expert' as const,
                timestamp: new Date(response.expert_response.created_at),
                isLoading: false,
                metadata: response.expert_response.metadata
              }
            : msg
        ))
        
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞ —á–µ—Ä–µ–∑ VPN:', response.expert_response.metadata?.provider)
        
      } else {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')
      }
      
    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', err)
      
      // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è
      setMessages(prev => prev.filter(msg => !msg.isLoading))
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      let errorMessage = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
      
      if (err.message.includes('–ª–∏–º–∏—Ç')) {
        errorMessage = '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.'
      } else if (err.message.includes('–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ')) {
        errorMessage = '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.'
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –æ—Ç–≤–µ—Ç
      const fallbackResponses = [
        '–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å —É –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É.',
        '–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –∑–∞–¥–µ—Ä–∂–∫—É. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏ –º–µ—à–∞—é—Ç –º–Ω–µ –¥–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç.',
        '–í–∞—à –≤–æ–ø—Ä–æ—Å –≤–∞–∂–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.',
        '–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. –°–∫–æ—Ä–æ –≤—Å–µ –Ω–∞–ª–∞–¥–∏—Ç—Å—è!',
        '–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ. –°–µ–π—á–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å AI —Å–∏—Å—Ç–µ–º–æ–π.'
      ]
      
      const fallbackResponse = fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)]
      
      const errorDisplayMessage: DisplayMessage = {
        id: Date.now() + 2,
        text: `${errorMessage}\n\n${fallbackResponse}`,
        sender: 'expert',
        timestamp: new Date()
      }
      
      setMessages(prev => [...prev, errorDisplayMessage])
      console.log('üîÑ –ü–æ–∫–∞–∑–∞–Ω fallback –æ—Ç–≤–µ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞')
      
    } finally {
      setSending(false)
    }
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
   */
  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      sendMessage()
    }
  }
  
  /**
   * –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
   */
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }
  
  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
   */
  const goBack = () => {
    console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É')
    navigate('/')
  }
  
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É —ç–∫—Å–ø–µ—Ä—Ç–∞
   */
  const getExpertIcon = (expertiseAreas: string[]) => {
    const iconMap: { [key: string]: string } = {
      business: 'üëî',
      psychology: 'üß†',
      finance: 'üí∞',
      career: 'üìà',
      technology: 'üíª'
    }
    
    for (const area of expertiseAreas) {
      if (iconMap[area]) {
        return iconMap[area]
      }
    }
    
    return 'üéØ'
  }
  
  /**
   * –û—Ü–µ–Ω–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–∞
   */
  const rateMessage = async (messageId: number, rating: number) => {
    try {
      await expertService.rateMessage(messageId, rating)
      console.log('‚≠ê –†–µ–π—Ç–∏–Ω–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', rating)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞:', error)
    }
  }
  
  /**
   * –ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º
   * –û—á–∏—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
   */
  const startNewConversation = async () => {
    if (!expert) return
    
    console.log('üÜï –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º:', expert.name)
    
    try {
      // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∏ –¥–∞–Ω–Ω—ã–µ
      expertService.clearExpertSession(expert.id)
      setSessionId(null)
      setError(null)
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
      const newConversationMessage: DisplayMessage = {
        id: Date.now(),
        text: `–û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä. –Ø ${expert.name} - ${expert.role}. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`,
        sender: 'expert',
        timestamp: new Date(),
        metadata: { is_new_conversation: true }
      }
      
      setMessages([newConversationMessage])
      
      // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
      if (inputRef.current) {
        inputRef.current.focus()
      }
      
      console.log('‚úÖ –ù–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç')
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:', error)
      
      // Fallback: –ø—Ä–æ—Å—Ç–æ–µ –æ—á–∏—â–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
      setMessages([{
        id: Date.now(),
        text: `–ü—Ä–∏–≤–µ—Ç! –Ø ${expert.name}. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º!`,
        sender: 'expert',
        timestamp: new Date()
      }])
    }
  }
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞
  useEffect(() => {
    if (expertId) {
      loadExpert()
    }
  }, [expertId])
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∫–Ω–æ–ø–æ–∫
  useEffect(() => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
      if (backButton && backButton.show && backButton.show.isAvailable()) {
        backButton.show()
        if (backButton.onClick) {
          backButton.onClick(goBack)
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
      if (mainButton && mainButton.isVisible && mainButton.isVisible()) {
        try {
          mainButton.hide()
        } catch (error) {
          console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É:', error)
        }
      }
      
      console.log('‚úÖ Telegram –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ ChatPage')
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∫–Ω–æ–ø–æ–∫:', error)
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ Telegram –∫–Ω–æ–ø–æ–∫
    }
    
    return () => {
      try {
        // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        if (backButton && backButton.hide && backButton.hide.isAvailable()) {
          backButton.hide()
        }
        if (backButton && backButton.offClick) {
          backButton.offClick(goBack)
        }
      } catch (error) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ Telegram –∫–Ω–æ–ø–æ–∫:', error)
      }
    }
  }, [])
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∞ –∫ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
  useEffect(() => {
    scrollToBottom()
  }, [messages])
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  useEffect(() => {
    if (!loading && inputRef.current) {
      inputRef.current.focus()
    }
  }, [loading])
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <Loading text="–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —ç–∫—Å–ø–µ—Ä—Ç—É..." />
      </div>
    )
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
  if (error && !expert) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen telegram-spacing text-center">
        <div className="text-4xl mb-4">üòî</div>
        <h2 className="text-lg font-bold mb-2">–≠–∫—Å–ø–µ—Ä—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</h2>
        <p className="text-sm tg-hint mb-4">{error}</p>
        <button 
          onClick={goBack}
          className="tg-button"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
        </button>
      </div>
    )
  }
  
  if (!expert) {
    return null
  }
  
  return (
    <div className="chat-container">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
      <div 
        className="
          flex 
          items-center 
          p-4 
          border-b
          sticky 
          top-0 
          z-10
        "
        style={{
          backgroundColor: 'var(--tg-theme-bg-color, #ffffff)',
          borderColor: 'var(--tg-theme-hint-color, #999999)'
        }}
      >
        <button
          onClick={goBack}
          className="mr-3 text-lg"
          style={{ color: 'var(--tg-theme-link-color, #2481cc)' }}
        >
          ‚Üê
        </button>
        
        <div 
          className="
            w-10 
            h-10 
            rounded-full 
            flex 
            items-center 
            justify-center 
            mr-3
            text-lg
          "
          style={{
            backgroundColor: 'var(--tg-theme-button-color, #2481cc)',
            color: '#ffffff'
          }}
        >
          {expert.avatar_url ? (
            <img 
              src={expert.avatar_url} 
              alt={expert.name}
              className="w-full h-full rounded-full object-cover"
            />
          ) : (
            getExpertIcon(expert.expertise_areas)
          )}
        </div>
        
        <div className="flex-1">
          <h2 
            className="font-semibold text-sm"
            style={{ color: 'var(--tg-theme-text-color, #000000)' }}
          >
            {expert.name}
          </h2>
          <p 
            className="text-xs"
            style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
          >
            {expert.role}
          </p>
        </div>
        
        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏ –∏ –∫–Ω–æ–ø–∫—É –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ */}
        <div className="flex items-center space-x-2">
          {sessionId && (
            <>
              <div 
                className="text-xs flex items-center space-x-1"
                style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
              >
                <span>üîó</span>
                <span>–°–µ—Å—Å–∏—è #{sessionId}</span>
              </div>
              <button
                onClick={startNewConversation}
                className="text-xs px-2 py-1 rounded bg-opacity-20 hover:bg-opacity-30 transition-all"
                style={{ 
                  color: 'var(--tg-theme-link-color, #2481cc)',
                  backgroundColor: 'var(--tg-theme-link-color, #2481cc)'
                }}
                title="–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä"
              >
                üÜï –ù–æ–≤—ã–π
              </button>
            </>
          )}
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ */}
          {messages.length > 0 && messages[0].metadata?.restoration_method && (
            <div 
              className="text-xs px-2 py-1 rounded flex items-center space-x-1"
              style={{ 
                backgroundColor: messages[0].metadata.restoration_method === 'server' 
                  ? 'rgba(34, 197, 94, 0.2)' 
                  : 'rgba(59, 130, 246, 0.2)',
                color: messages[0].metadata.restoration_method === 'server' 
                  ? 'var(--tg-theme-link-color, #22c55e)' 
                  : 'var(--tg-theme-link-color, #3b82f6)'
              }}
              title={`–†–∞–∑–≥–æ–≤–æ—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–µ—Ç–æ–¥–æ–º: ${messages[0].metadata.restoration_method}`}
            >
              {messages[0].metadata.restoration_method === 'server' ? (
                <>
                  <span>‚òÅÔ∏è</span>
                  <span>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω</span>
                </>
              ) : (
                <>
                  <span>üíæ</span>
                  <span>–õ–æ–∫–∞–ª—å–Ω–æ</span>
                </>
              )}
            </div>
          )}
        </div>
      </div>
      
      {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
      <div className="chat-messages hide-scrollbar">
        <div className="space-y-3">
          {messages.map((message) => (
            <div
              key={message.id}
              className={`
                flex 
                ${message.sender === 'user' ? 'justify-end' : 'justify-start'}
                ${message.metadata?.is_system_message ? 'justify-center' : ''}
              `}
            >
              <div
                className={`
                  message 
                  ${message.sender}
                  ${message.isLoading ? 'opacity-70' : ''}
                  ${message.metadata?.is_system_message ? 'system-message' : ''}
                  ${message.metadata?.is_recommendation_prompt ? 'recommendation-message' : ''}
                  ${message.metadata?.restoration_method ? 'restoration-message' : ''}
                  max-w-[80%]
                `}
                style={message.metadata?.is_system_message ? {
                  backgroundColor: message.metadata?.restoration_method === 'server' 
                    ? 'rgba(34, 197, 94, 0.1)'
                    : message.metadata?.restoration_method === 'local'
                    ? 'rgba(59, 130, 246, 0.1)'
                    : 'var(--tg-theme-secondary-bg-color, #f1f1f1)',
                  border: '1px solid',
                  borderColor: message.metadata?.restoration_method === 'server'
                    ? 'rgba(34, 197, 94, 0.3)'
                    : message.metadata?.restoration_method === 'local'
                    ? 'rgba(59, 130, 246, 0.3)'
                    : 'var(--tg-theme-hint-color, #999999)',
                  borderRadius: '12px',
                  padding: '12px',
                  maxWidth: '90%',
                  margin: '0 auto',
                  textAlign: 'center' as const
                } : undefined}
              >
                {/* –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π */}
                {message.metadata?.is_system_message && (
                  <div 
                    className="flex items-center justify-center mb-2"
                    style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
                  >
                    {message.metadata?.restoration_method === 'server' && '‚òÅÔ∏è'}
                    {message.metadata?.restoration_method === 'local' && 'üíæ'}
                    {message.metadata?.is_welcome_message && 'üëã'}
                    {message.metadata?.is_new_conversation && 'üÜï'}
                    {message.metadata?.is_recommendation_prompt && 'üí°'}
                  </div>
                )}
                
                <p className={`text-sm whitespace-pre-wrap ${
                  message.metadata?.is_system_message ? 'text-center' : ''
                }`}>
                  {message.text}
                </p>
                
                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π */}
                {message.metadata?.restoration_method && message.metadata?.is_system_message && (
                  <div 
                    className="mt-2 text-xs opacity-70"
                    style={{ color: 'var(--tg-theme-hint-color, #999999)' }}
                  >
                    {message.metadata.restoration_method === 'server' && (
                      <span>‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å —Å–µ—Ä–≤–µ—Ä–æ–º</span>
                    )}
                    {message.metadata.restoration_method === 'local' && (
                      <span>üì± –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞</span>
                    )}
                  </div>
                )}
                
                {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π */}
                {message.metadata?.is_recommendation_prompt && message.metadata?.recommendations && Array.isArray(message.metadata.recommendations) && message.metadata.recommendations.length > 0 && (
                  <div className="mt-3 space-y-2">
                    {message.metadata.recommendations.slice(0, 3).map((rec: any, index: number) => (
                      <button
                        key={index}
                        className="block w-full text-xs px-3 py-2 rounded bg-opacity-20 hover:bg-opacity-30 transition-all"
                        style={{ 
                          backgroundColor: 'var(--tg-theme-button-color, #2481cc)',
                          color: 'var(--tg-theme-button-text-color, #ffffff)'
                        }}
                        onClick={() => {
                          // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
                          console.log('–í—ã–±—Ä–∞–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:', rec.recommendation);
                        }}
                      >
                        {rec.recommendation}
                      </button>
                    ))}
                  </div>
                )}
                
                <div className="flex items-center justify-between mt-1">
                  <div 
                    className="text-xs opacity-60"
                  >
                    {message.timestamp.toLocaleTimeString('ru-RU', {
                      hour: '2-digit',
                      minute: '2-digit'
                    })}
                  </div>
                  
                  {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —ç–∫—Å–ø–µ—Ä—Ç–∞ */}
                  {message.sender === 'expert' && message.metadata && !message.isLoading && !message.metadata.is_system_message && (
                    <div className="flex items-center space-x-2 text-xs opacity-60">
                      {message.metadata.provider && (
                        <span title={`–ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${message.metadata.provider}`}>
                          {message.metadata.provider === 'openai' ? 'ü§ñ' : 'üîÑ'}
                        </span>
                      )}
                      {message.metadata.generation_time && (
                        <span title={`–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${message.metadata.generation_time.toFixed(1)}—Å`}>
                          ‚è±Ô∏è
                        </span>
                      )}
                      {message.metadata.tokens_used && (
                        <span title={`–¢–æ–∫–µ–Ω—ã: ${message.metadata.tokens_used}`}>
                          üìä
                        </span>
                      )}
                    </div>
                  )}
                  
                  {/* –ö–Ω–æ–ø–∫–∏ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —ç–∫—Å–ø–µ—Ä—Ç–∞ (–∫—Ä–æ–º–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö) */}
                  {message.sender === 'expert' && !message.isLoading && !message.metadata?.is_system_message && typeof message.id === 'number' && (
                    <div className="flex items-center space-x-1 ml-2">
                      {[1, 2, 3, 4, 5].map((rating) => (
                        <button
                          key={rating}
                          onClick={() => rateMessage(message.id, rating)}
                          className="text-xs opacity-60 hover:opacity-100 transition-opacity"
                          title={`–û—Ü–µ–Ω–∏—Ç—å ${rating} –∑–≤–µ–∑–¥`}
                        >
                          ‚≠ê
                        </button>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))}
          <div ref={messagesEndRef} />
        </div>
      </div>
      
      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
      <div className="chat-input">
        <div className="flex items-center space-x-3">
          <input
            ref={inputRef}
            type="text"
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            onKeyPress={handleKeyPress}
            placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
            disabled={sending}
            className="
              flex-1 
              px-4 
              py-3 
              rounded-lg 
              border 
              text-sm
              focus:outline-none 
              focus:ring-2
              disabled:opacity-50
            "
            style={{
              backgroundColor: 'var(--tg-theme-secondary-bg-color, #f1f1f1)',
              borderColor: 'var(--tg-theme-hint-color, #999999)',
              color: 'var(--tg-theme-text-color, #000000)'
            }}
          />
          
          <button
            onClick={sendMessage}
            disabled={!inputValue.trim() || sending}
            className="
              px-4 
              py-3 
              rounded-lg 
              font-medium 
              text-sm
              disabled:opacity-50
              tg-button
              transition-all
              duration-200
            "
          >
            {sending ? '‚è≥' : '‚û§'}
          </button>
        </div>
        
        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ */}
        {error && (
          <div className="mt-2 p-2 text-xs text-orange-600 bg-orange-50 rounded">
            ‚ö†Ô∏è –†–∞–±–æ—Ç–∞–µ–º –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ
          </div>
        )}
      </div>
    </div>
  )
}

export default ChatPage 
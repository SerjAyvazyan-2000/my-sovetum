/**
 * –•—É–∫ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã Telegram –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
 */

import { useEffect } from 'react'

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ü–≤–µ—Ç–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–µ–º—ã Telegram
 */
interface TelegramThemeParams {
  bg_color?: string
  text_color?: string
  hint_color?: string
  link_color?: string
  button_color?: string
  button_text_color?: string
  secondary_bg_color?: string
  header_bg_color?: string
  accent_text_color?: string
  section_bg_color?: string
  section_header_text_color?: string
  subtitle_text_color?: string
  destructive_text_color?: string
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã Telegram –∫ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
 * @param themeParams - –æ–±—ä–µ–∫—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–µ–º—ã –æ—Ç Telegram
 */
const applyTelegramTheme = (themeParams: TelegramThemeParams) => {
  const root = document.documentElement
  
  // –ú–∞–ø–∏–Ω–≥ Telegram –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–∞ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  const colorMappings: Record<keyof TelegramThemeParams, string> = {
    bg_color: '--tg-theme-bg-color',
    text_color: '--tg-theme-text-color', 
    hint_color: '--tg-theme-hint-color',
    link_color: '--tg-theme-link-color',
    button_color: '--tg-theme-button-color',
    button_text_color: '--tg-theme-button-text-color',
    secondary_bg_color: '--tg-theme-secondary-bg-color',
    header_bg_color: '--tg-theme-header-bg-color',
    accent_text_color: '--tg-theme-accent-text-color',
    section_bg_color: '--tg-theme-section-bg-color',
    section_header_text_color: '--tg-theme-section-header-text-color',
    subtitle_text_color: '--tg-theme-subtitle-text-color',
    destructive_text_color: '--tg-theme-destructive-text-color'
  }
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–µ–º—ã
  Object.entries(themeParams).forEach(([key, value]) => {
    const cssVariable = colorMappings[key as keyof TelegramThemeParams]
    if (cssVariable && value) {
      root.style.setProperty(cssVariable, value)
      console.log(`üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ç–µ–º–∞: ${cssVariable} = ${value}`)
    }
  })
}

/**
 * –•—É–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã Telegram
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∏—Ö –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
 */
export const useTelegramTheme = () => {
  useEffect(() => {
    console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã Telegram...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
      const webApp = window.Telegram.WebApp
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã
      const themeParams = webApp.themeParams
      
      if (themeParams) {
        console.log('üìã –ü–æ–ª—É—á–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã:', themeParams)
        applyTelegramTheme(themeParams)
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞—Å—Å —Ç–µ–º—ã –Ω–∞ body
        const isDark = webApp.colorScheme === 'dark'
        document.body.classList.toggle('dark', isDark)
        console.log(`üåì –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ${isDark ? '—Ç–µ–º–Ω–∞—è' : '—Å–≤–µ—Ç–ª–∞—è'} —Ç–µ–º–∞`)
      }
      
      // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
      const handleThemeChanged = () => {
        console.log('üîÑ –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞')
        const newThemeParams = webApp.themeParams
        if (newThemeParams) {
          applyTelegramTheme(newThemeParams)
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ç–µ–º—ã
          const isDark = webApp.colorScheme === 'dark'
          document.body.classList.toggle('dark', isDark)
        }
      }
      
      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
      webApp.onEvent('themeChanged', handleThemeChanged)
      
      // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      return () => {
        webApp.offEvent('themeChanged', handleThemeChanged)
      }
    } else {
      console.log('‚ö†Ô∏è Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Ç–µ–º—É')
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É
      applyTelegramTheme({
        bg_color: '#ffffff',
        text_color: '#000000',
        hint_color: '#999999',
        link_color: '#2481cc',
        button_color: '#2481cc',
        button_text_color: '#ffffff',
        secondary_bg_color: '#f1f1f1'
      })
    }
  }, [])
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ Telegram WebApp API
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ñ—É–Ω–∫—Ü–∏—è–º WebApp
 */
export const useTelegramWebApp = () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
  if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
    return window.Telegram.WebApp
  }
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –µ—Å–ª–∏ WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
  return null
}

export default useTelegramTheme 